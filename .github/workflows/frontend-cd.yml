name: CD - Deploy Frontend to AKS

on:
  workflow_dispatch:
    inputs:
      product_ip:
        description: "External IP of Product Service (e.g., http://X.X.X.X:80)"
        required: true
      order_ip:
        description: "External IP of Order Service (e.g., http://Y.Y.Y.Y:80)"
        required: true
      aks_cluster:
        description: "AKS cluster name"
        required: true
      resource_group:
        description: "AKS resource group"
        required: true

env:
  # from repo secrets
  ACR_NAME: ${{ secrets.ACR_NAME }}                   # e.g. wk08acr88945
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}   # e.g. wk08acr88945.azurecr.io
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # âœ… Login using ACR_NAME (not login server)
      - name: Login to Azure Container Registry
        run: az acr login --name "${{ env.ACR_NAME }}"

      # Inject backend IPs into frontend/main.js
      - name: Inject Backend IPs into Frontend main.js
        run: |
          sed -i "s#^const PRODUCT_API .*#const PRODUCT_API = \"${{ inputs.product_ip }}\";#g" frontend/main.js
          sed -i "s#^const ORDER_API .*#const ORDER_API   = \"${{ inputs.order_ip }}\";#g" frontend/main.js
          echo "Updated main.js:"
          grep -E 'PRODUCT_API|ORDER_API' -n frontend/main.js

      # Build and push the frontend image
      - name: Build and Push Frontend Image
        run: |
          docker build -t "${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }}" ./frontend
          docker push "${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }}"

      # Get kubeconfig for AKS
      - name: Set Kubernetes context (get AKS credentials)
        run: az aks get-credentials -g "${{ inputs.resource_group }}" -n "${{ inputs.aks_cluster }}" --overwrite-existing

      # Deploy frontend
      - name: Deploy Frontend to AKS
        run: |
         kubectl apply -f k8s/frontend.yaml
         kubectl set image deployment/frontend \
         frontend-container="${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }}" \
         --record -n default
      - name: Logout from Azure (AKS deployment)
        if: always()
        run: az logout
