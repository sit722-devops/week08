# week08/.github/workflows/frontend-cd.yml

name: CD - Deploy Frontend to AKS

on:
  # Run automatically when code is pushed to main in frontend folder
  push:
    branches:
      - main
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend-cd.yml'

jobs:
  deploy_frontend:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Azure login using a Service Principal secret
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Login to Azure Container Registry (ACR)
      - name: Login to Azure Container Registry
        run: az acr login --name ${{ secrets.AZURE_CONTAINER_REGISTRY }}

      - name: Inject Backend IPs into Frontend main.js
        run: |
          echo "Injecting IPs into frontend/main.js"
          sed -i "s|_PRODUCT_API_URL_|${{ secrets.PRODUCT_API_IP }}|g" frontend/main.js
          sed -i "s|_ORDER_API_URL_|${{ secrets.ORDER_API_IP }}|g" frontend/main.js
          
          echo "--- Modified main.js content ---"
          cat frontend/main.js
          echo "---------------------------------"

      # Build and Push Docker image for Frontend
      - name: Build and Push Frontend Image
        run: |
          docker build -t ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:latest ./frontend/
          docker push ${{ secrets.AZURE_CONTAINER_REGISTRY }}/frontend:latest

      - name: Set Kubernetes context (get AKS credentials)
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ secrets.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Deploy Frontend to AKS
        run: |
          echo "Deploying frontend with latest tag to AKS cluster: ${{ secrets.AKS_CLUSTER_NAME }}"
          cd k8s/
          kubectl apply -f frontend.yaml

      - name: Logout from Azure (AKS deployment)
        run: az logout
