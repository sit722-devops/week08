# week08/.github/workflows/backend_ci.yml
name: Backend CI - Test, Build and Push Images to ACR

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      # Trigger only when Week08 backend or this workflow changes
      - 'week08/backend/**'
      - 'week08/.github/workflows/backend_ci.yml'
      - '.github/workflows/backend_ci.yml'

env:
  # Required secrets (set in repo → Settings → Secrets and variables → Actions)
  ACR_NAME: ${{ secrets.ACR_NAME }}                 # e.g., sit722wk08acr9242
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }} # e.g., sit722wk08acr9242.azurecr.io
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}
  DOCKER_BUILDKIT: 0

jobs:
  test_and_lint_backends:
    name: Test backends
    runs-on: ubuntu-latest

    services:
      product_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: products
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: [ "5432:5432" ]

      order_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports: [ "5433:5432" ]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Helpful once: verify paths exist on the runner
      - name: Debug paths
        run: |
          pwd
          ls -la
          ls -la week08 || true
          ls -la week08/backend || true
          ls -la week08/backend/product_service || true
          ls -la week08/backend/order_service || true

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          for req in week08/backend/*/requirements.txt; do
            echo "Installing $req"
            pip install -r "$req"
          done
          pip install pytest httpx

      - name: Run product_service tests
        working-directory: week08/backend/product_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: products
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q

      - name: Run order_service tests
        working-directory: week08/backend/order_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: orders
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest tests --maxfail=1 --disable-warnings -q

  build_and_push_images:
    name: Build & push images
    runs-on: ubuntu-latest
    needs: test_and_lint_backends

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ACR CLI login uses the short registry name (no .azurecr.io)
      - name: Login to Azure Container Registry
        run: az acr login --name ${{ env.ACR_NAME }}

      - name: Build and Push Product Service Image
        run: |
          docker buildx build --load \
            -t ${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }} \
            -t ${{ env.ACR_LOGIN_SERVER }}/product_service:latest \
            week08/backend/product_service
          docker push ${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }}
          docker push ${{ env.ACR_LOGIN_SERVER }}/product_service:latest

      - name: Build and Push Order Service Image
        run: |
          docker buildx build --load \
            -t ${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }} \
            -t ${{ env.ACR_LOGIN_SERVER }}/order_service:latest \
            week08/backend/order_service
          docker push ${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }}
          docker push ${{ env.ACR_LOGIN_SERVER }}/order_service:latest

      - name: Azure Logout
        if: always()
        run: az logout
