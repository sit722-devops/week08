# week08/.github/workflows/backend_ci.yml

name: Backend CI - Test, Build & Push (ACR admin auth)

on:
  workflow_dispatch:
  push:
    branches: [main]
    paths:
      - "backend/**"
      - ".github/workflows/backend_ci.yml"

env:
  # e.g. belieliu27w08acr.azurecr.io  (add as repo secret)
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  # unique, traceable tag for each run
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  test_and_lint_backends:
    runs-on: ubuntu-latest

    services:
      product_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: products
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      order_db:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: orders
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5433:5432

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          for req in backend/*/requirements.txt; do
            echo "Installing $req"
            pip install -r "$req"
          done
          pip install pytest httpx

      - name: Test product_service
        working-directory: backend/product_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: products
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest -q

      - name: Test order_service
        working-directory: backend/order_service
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5433
          POSTGRES_DB: orders
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        run: pytest -q

  build_and_push_images:
    runs-on: ubuntu-latest
    needs: test_and_lint_backends

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Login with ACR admin creds (add as repo secrets)
      - name: Docker login to ACR (admin user)
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ env.ACR_LOGIN_SERVER }} -u "${{ secrets.ACR_USERNAME }}" --password-stdin

      - name: Build & push product_service
        run: |
          docker build \
            -t ${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }} \
            -t ${{ env.ACR_LOGIN_SERVER }}/product_service:latest \
            ./backend/product_service
          docker push ${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }}
          docker push ${{ env.ACR_LOGIN_SERVER }}/product_service:latest

      - name: Build & push order_service
        run: |
          docker build \
            -t ${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }} \
            -t ${{ env.ACR_LOGIN_SERVER }}/order_service:latest \
            ./backend/order_service
          docker push ${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }}
          docker push ${{ env.ACR_LOGIN_SERVER }}/order_service:latest
