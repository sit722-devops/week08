name: CI/CD Pipeline

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main, development ]
  workflow_dispatch:

permissions:
  contents: read
  id-token: write

jobs:
  backend:
    name: Backend: install, test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache backend node_modules
        uses: actions/cache@v4
        id: cache-backend
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-backend-
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install (backend)
        run: |
          cd backend
          npm ci
      - name: Run backend tests
        run: |
          cd backend
          npm test
      - name: Upload backend test results
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: backend/test-results || backend/junit.xml

  frontend:
    name: Frontend: install, build, test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Cache frontend node_modules
        uses: actions/cache@v4
        id: cache-frontend
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-frontend-
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Install (frontend)
        run: |
          cd frontend
          npm ci
      - name: Build frontend
        run: |
          cd frontend
          npm run build
      - name: Run frontend tests
        run: |
          cd frontend
          npm test
      - name: Upload frontend build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/build

  docker-build:
    name: Build Docker images
    needs: [backend, frontend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Log in to registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
      - name: Build backend image
        run: |
          docker build -t ${{ secrets.REGISTRY_URL }}/backend:${{ github.sha }} ./backend
          docker push ${{ secrets.REGISTRY_URL }}/backend:${{ github.sha }}
      - name: Build frontend image
        run: |
          docker build -t ${{ secrets.REGISTRY_URL }}/frontend:${{ github.sha }} ./frontend
          docker push ${{ secrets.REGISTRY_URL }}/frontend:${{ github.sha }}

  deploy:
    name: Deploy to production (only on main pushes)
    needs: docker-build
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' && github.event_name == 'push' }}
    steps:
      - name: Notify deploy
        run: echo "Deploying images ${{ secrets.REGISTRY_URL }}/backend:${{ github.sha }} and frontend:${{ github.sha }}"
      # Add real deployment steps here (kubectl, azure/login, etc.)
