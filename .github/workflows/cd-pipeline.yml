
name: CD - Deploy Services to AKS

on:
  push:
    branches:
      - main # Triggers on push/merge to the 'main' branch
  workflow_dispatch: # Allows for manual trigger if needed

env:
  ACR_LOGIN_SERVER: ${{ secrets.ACR_LOGIN_SERVER }}
  AKS_CLUSTER_NAME: 'SIT722-AKS-Cluster' # Replace with your AKS cluster name
  AKS_RESOURCE_GROUP: 'SIT722-8-1P-RG' # Replace with your RG name
  IMAGE_TAG: ${{ github.sha }} # The Git SHA of the commit that triggered this deployment

jobs:
  deploy_to_aks:
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set Kubernetes context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.AKS_RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}

      - name: Deploy Base Infrastructure (Databases, Configs, Secrets)
        run: |
          # The -k flag allows applying an entire directory of YAML files
          kubectl apply -k k8s/base/

      - name: Deploy Application Services (Backend and Frontend)
        run: |
          kubectl apply -k k8s/apps/

      - name: Update Deployed Images to the New Version
        run: |
          # Use kubectl set image to trigger a rolling update with the new image tag
          # This is the core of the CD process, deploying the artifact from CI
          echo "Updating deployments to image tag: ${{ env.IMAGE_TAG }}"
          
          kubectl set image deployment/product-service-w08e1 product-service-container=${{ env.ACR_LOGIN_SERVER }}/product_service:${{ env.IMAGE_TAG }}
          kubectl set image deployment/order-service-w08e1 order-service-container=${{ env.ACR_LOGIN_SERVER }}/order_service:${{ env.IMAGE_TAG }}
          kubectl set image deployment/frontend frontend-container=${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }}

      - name: Verify Deployment Rollout Status
        run: |
          echo "Verifying deployment success..."
          kubectl rollout status deployment/product-service-w08e1
          kubectl rollout status deployment/order-service-w08e1
          kubectl rollout status deployment/frontend

      - name: Logout from Azure
        if: always()
        run: az logout