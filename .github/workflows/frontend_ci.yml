# week08/.github/workflows/frontend_ci.yml

name: Frontend CI - Build & Push Image

on:
  # Manual trigger
  workflow_dispatch:

  # Automatically on pushes to main branch
  push:
    branches:
      - main
    paths: # Only trigger if changes are in the frontend directory
      - 'frontend/**'
      - '.github/workflows/frontend_ci.yml' # Trigger if this workflow file changes
  pull_request:
    branches:
      - main

# Define global environment variables that can be used across jobs
env:
  # ACR Login Server (e.g., myregistry.azurecr.io)
  # This needs to be set as a GitHub Repository Secret
  ACR_LOGIN_SERVER: ${{ secrets.AZURE_CONTAINER_REGISTRY }}
  # Dynamically generate image tags based on Git SHA and GitHub Run ID
  # This provides unique, traceable tags for each image build
  IMAGE_TAG: ${{ github.sha }}-${{ github.run_id }}

jobs:
  build_and_push_frontend:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    # Azure login using a Service Principal secret
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # Login to Azure Container Registry (ACR)
    - name: Login to Azure Container Registry
      run: az acr login --name ${{ env.ACR_LOGIN_SERVER }}

    # Build and Push Docker image for Frontend
    - name: Build and Push Frontend Image
      run: |
        docker build --platform linux/amd64 -t ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }} ./frontend/
        docker push ${{ env.ACR_LOGIN_SERVER }}/frontend:${{ env.IMAGE_TAG }}


    - name: Trigger Frontend CD Workflow
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.actions.createWorkflowDispatch({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: 'frontend-cd.yml',
            ref: 'main',
            inputs: {
              product_api_ip: '<product_service_ip>',
              order_api_ip: '<order_service_ip>',
              aks_cluster_name: '<aks_cluster_name>',
              aks_resource_group: '<resource_group>'
            }
          });

    # Logout from Azure for security (runs even if image push fails)
    - name: Logout from Azure
      run: az logout
      if: always()
